#!/usr/bin/env bash

########################################
# image clipboard history: fzf+ueberzugpp wrapper, xclip.
# set terminal command in sel()

# my version of fzfub is in this repo
# with bindings for copy, delete, etc.

# bind `cliphist add` and `cliphist sel` to shortcuts
# my screenshot script adds to cliphist
# you may want to set window class
# `fzfmenu` or title `fzf` to floating
########################################


hist=~/.cache/hist

add() { # add copied image to history. my screenshot script is bound to this.
		[ -e "$hist" ] || notify-send "creating directory $hist..."; mkdir -p $hist
		isimg=$(xclip -selection clipboard -o -t targets | grep png)

		[[ -n $isimg ]] && xclip -selection clipboard -t image/png -o > $hist/$(date '+%a_%b%d%y_%h%m%s').png && notify-send -i "$(ls -t | head -n 1)" " clipped img" ;}

link() { # my qutebrowser config has macro 'cc' bound to hint images + save selected to cliphist
		wget -q "$2" -p $hist && notify-send " img saved" ;}

sel() { # select from clip history and re-copy to clipboard
		st -f 'liberation mono:pixelsize=27' -c fzfmenu -n fzfmenu -t fzf -g "107x12-100+270" -e fzfub $hist c --tac ;}

copy() { # my fzfub script has ctrl-c and enter bound to copy
		[[ -n $(file -b --mime-type "$2" | grep png) ]] && xclip -i -selection clipboard -t image/png "$2" && notify-send -i $2 "reclipped img " ;}

case "$1" in
		add*) add "$@" ;;
		link*) link "$@" ;;
		sel*) sel "$@" ;;
		copy*) copy "$@" ;;
		*) printf "$0 | file: $hist\n\nimage clipboard history: requires fzf+ueberzugpp wrapper, xclip\nset terminal command in sel()\n\n" ; exit 0 ;;
esac
